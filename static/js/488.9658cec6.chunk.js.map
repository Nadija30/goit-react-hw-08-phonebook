{"version":3,"file":"static/js/488.9658cec6.chunk.js","mappings":"iMACA,EAA4B,gCAA5B,EAAmE,2BAAnE,EAAsG,4BAAtG,EAA0I,4BAA1I,EAA+K,6B,iDCiG/K,EA5FqB,WACnB,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,eAEXC,EAAoB,SAAAC,GACxB,MAAwBA,EAAEC,cAAlBV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MACd,OAAQX,GACN,IAAK,OACHC,EAAQU,GACR,MACF,IAAK,QACHR,EAASQ,GACT,MACF,IAAK,WACHN,EAAYM,GAMjB,EAiBD,OACE,gBAAKC,UAAWC,EAAhB,UACE,kBAAMD,UAAWC,EAAUC,SAlBN,SAAAL,GACvBA,EAAEM,iBACF,IAAMC,EAAU,CAAEhB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,GAC/Ba,QAAQC,IAAI,UAAWF,GACvBV,GAASa,EAAAA,EAAAA,IAASH,IACfI,SACAC,MAAK,SAAAC,GACJC,EAAAA,GAAAA,QAAA,UAAiBD,EAAsBN,QAAQhB,KAA/C,aACD,IACAwB,OAAM,WACLD,EAAAA,GAAAA,QAAc,2BACf,IACHtB,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAGG,WACE,mBAAOO,UAAWC,EAAlB,UAA6B,QAE3B,kBACED,UAAWC,EACXY,KAAK,OACLzB,KAAK,OACLW,MAAOX,EACP0B,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,YAAY,iBACZC,SAAUtB,QAGd,mBAAOI,UAAWC,EAAlB,UAA6B,SAE3B,kBACED,UAAWC,EACXY,KAAK,QACLzB,KAAK,QACLW,MAAOT,EACPwB,QAAQ,2EACRC,MAAM,oLACNC,UAAQ,EACRC,YAAY,kBACZC,SAAUtB,QAGd,mBAAOI,UAAWC,EAAlB,UAA6B,YAE3B,kBACED,UAAWC,EACXY,KAAK,WACLzB,KAAK,WACLW,MAAOP,EACPsB,QAAQ,2CACRC,MAAM,wJACNC,UAAQ,EACRC,YAAY,qBACZC,SAAUtB,QAGd,mBAAQI,UAAWC,EAAYY,KAAK,SAApC,SAA6C,iBAMpD,EC1FD,EAJqB,WACnB,OAAO,SAAC,EAAD,GACR,C","sources":["webpack://react-homework-template/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RegisterForm_container__w0Atp\",\"form\":\"RegisterForm_form__Tv43W\",\"input\":\"RegisterForm_input__FsgBz\",\"label\":\"RegisterForm_label__4pTXF\",\"button\":\"RegisterForm_button__B3hFq\"};","import css from './RegisterForm.module.css';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { register } from 'redux/auth/authThunk';\n\nconst RegisterForm = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChangeInput = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n  const handleSubmitUser = e => {\n    e.preventDefault();\n    const newUser = { name, email, password };\n    console.log('newUser', newUser);\n    dispatch(register(newUser))\n      .unwrap()\n      .then(originalPromiseResult => {\n        toast.success(`${originalPromiseResult.newUser.name} welcome!`);\n      })\n      .catch(() => {\n        toast.failure(\"Sorry, something's wrong\");\n      });\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n  return (\n    <div className={css.container}>\n      <form className={css.form} onSubmit={handleSubmitUser}>\n        <label className={css.label}>\n          Name\n          <input\n            className={css.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder=\"Enter name ...\"\n            onChange={handleChangeInput}\n          />\n        </label>\n        <label className={css.label}>\n          Email\n          <input\n            className={css.input}\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            pattern=\"/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.\"\n            title=\"Email may contain letters, numbers, an apostrophe, and must be followed by '@' domain name '.' domain suffix. For example Taras@ukr.ua, adrian@gmail.com, JacobM3rcer@hotmail.com\"\n            required\n            placeholder=\"Enter email ...\"\n            onChange={handleChangeInput}\n          />\n        </label>\n        <label className={css.label}>\n          Password\n          <input\n            className={css.input}\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            pattern=\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$\"\n            title=\"Password must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters. For example TgeV23592, 3Greioct.\"\n            required\n            placeholder=\"Enter password ...\"\n            onChange={handleChangeInput}\n          />\n        </label>\n        <button className={css.button} type=\"submit\">\n          Register\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n  return <RegisterForm />;\n};\n\nexport default RegisterPage;\n"],"names":["useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","handleChangeInput","e","currentTarget","value","className","css","onSubmit","preventDefault","newUser","console","log","register","unwrap","then","originalPromiseResult","toast","catch","type","pattern","title","required","placeholder","onChange"],"sourceRoot":""}