{"version":3,"file":"static/js/344.fdb15625.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Error/Error.module.css?141d","components/Error/Error.jsx","webpack://react-homework-template/./src/components/EmptyContactList/EmptyContactList.module.css?d3cd","components/EmptyContactList/EmptyContactList.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["export const selectContactsList = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"input\":\"ContactForm_input__Bl93P\",\"label\":\"ContactForm_label__-cVXI\",\"button\":\"ContactForm_button__eSwX9\"};","import { nanoid } from '@reduxjs/toolkit';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { selectContactsList } from 'redux/contacts/contactsSelectors';\n\nimport { createContactsThunk } from 'redux/contacts/thunk';\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsList);\n\n  const handleChange = ({ target: { value, name } }) => {\n    if (name === 'name') setName(value);\n    else setNumber(value);\n  };\n\n  const onSubmitAddContact = event => {\n    event.preventDefault();\n    const data = { name, number };\n    const newObj = { ...data, id: nanoid() };\n\n    if (isNameNew(contacts, newObj) !== undefined) {\n      toast.warning(`${newObj.name} is already in contacts`);\n      return;\n    }\n\n    dispatch(createContactsThunk(newObj))\n      .unwrap()\n      .then(originalPromiseResult => {\n        toast.success(\n          `${originalPromiseResult.name} successfully added to contacts`\n        );\n      })\n      .catch(() => {\n        toast.failure(\"Sorry, something's wrong\");\n      });\n    reset();\n  };\n\n  const isNameNew = (contacts, newObj) => {\n    return contacts.find(\n      ({ name }) => name.toLowerCase() === newObj.name.toLowerCase()\n    );\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={onSubmitAddContact}>\n      <label className={css.label}>\n        Name\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          onChange={handleChange}\n          value={name}\n          placeholder=\"Enter name ...\"\n          required\n        />\n      </label>\n      <label className={css.label}>\n        Number\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          onChange={handleChange}\n          value={number}\n          placeholder=\"Enter number ...\"\n          required\n        />\n      </label>\n      <button className={css.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterSet, selectContactsFilter } from 'redux/filters/slice';\nimport css from './Filter.module.css';\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(selectContactsFilter);\n\n  const onChangeFilter = event => {\n    const { value } = event.currentTarget;\n    dispatch(filterSet(value));\n  };\n\n  return (\n    <div>\n      <label className={css.label}>\n        Find contacts by name:\n        <input\n          className={css.input}\n          name=\"filter\"\n          type=\"text\"\n          value={filter}\n          onChange={onChangeFilter}\n        />\n      </label>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapperError\":\"Error_wrapperError__3jywT\"};","import { useSelector } from 'react-redux';\nimport { selectError } from 'redux/contacts/contactsSelectors';\n\nimport css from './Error.module.css';\n\nexport const Error = () => {\n  const error = useSelector(selectError);\n\n  return (\n    <div className={css.wrapperError}>\n      <p> Нам шкода, {error}</p>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"emptyContactsList\":\"EmptyContactList_emptyContactsList__M9xN8\"};","import css from './EmptyContactList.module.css';\n\nexport const EmptyContactsList = () => {\n  return (\n    <div className={css.emptyContactsList}>\n      <h1>You don't have any contacts yet</h1>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"button\":\"ContactList_button__7kL4l\"};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { selectContactsList } from 'redux/contacts/contactsSelectors';\nimport { deleteContactsThunk, getContactsThunk } from 'redux/contacts/thunk';\nimport { selectContactsFilter } from 'redux/filters/slice';\nimport css from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n\n  const contacts = useSelector(selectContactsList);\n  const filter = useSelector(selectContactsFilter);\n\n  const visibleContacts = contacts.filter(({ name }) =>\n    name?.toLowerCase().includes(filter)\n  );\n\n  const deleteContact = contactId => {\n    dispatch(deleteContactsThunk(contactId))\n      .unwrap()\n      .then(originalPromiseResult => {\n        toast.success(\n          `${originalPromiseResult.name} successfully deleted from contacts`\n        );\n      })\n      .catch(() => {\n        toast.failure(\"Sorry, something's wrong\");\n      });\n  };\n  return (\n    <ul className={css.list}>\n      {visibleContacts.map(({ id, name, number }) => {\n        return (\n          <li className={css.item} key={id}>\n            <span>{name}</span>\n            <span>{number}</span>\n            <button\n              className={css.button}\n              type=\"button\"\n              onClick={() => deleteContact(id)}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","import * as React from 'react';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { Error } from 'components/Error/Error';\n\nimport { useSelector } from 'react-redux';\n\nimport {\n  selectContactsList,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/contactsSelectors';\nimport { EmptyContactsList } from 'components/EmptyContactList/EmptyContactList';\nimport { ContactList } from 'components/ContactList/ContactList';\n\nconst ContactsPage = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const phoneBook = useSelector(selectContactsList);\n\n  return (\n    <div>\n      <ContactForm />\n      <Filter />\n      {error ? <Error /> : <ContactList />}\n      {phoneBook.length === 0 && !error && !isLoading && <EmptyContactsList />}\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectContactsList","state","contacts","items","selectIsLoading","isLoading","selectError","error","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","handleChange","target","value","isNameNew","newObj","find","toLowerCase","reset","className","css","onSubmit","event","preventDefault","data","id","nanoid","undefined","createContactsThunk","unwrap","then","originalPromiseResult","toast","catch","type","pattern","title","onChange","placeholder","required","Filter","filter","selectContactsFilter","currentTarget","filterSet","Error","EmptyContactsList","ContactList","useEffect","getContactsThunk","visibleContacts","includes","map","onClick","contactId","deleteContactsThunk","phoneBook","length"],"sourceRoot":""}