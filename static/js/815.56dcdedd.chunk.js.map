{"version":3,"file":"static/js/815.56dcdedd.chunk.js","mappings":"mPA0FA,EArFqB,WACnB,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,eAEXC,EAAoB,SAAAC,GACxB,MAAwBA,EAAEC,cAAlBV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MACd,OAAQX,GACN,IAAK,OACHC,EAAQU,GACR,MACF,IAAK,QACHR,EAASQ,GACT,MACF,IAAK,WACHN,EAAYM,GAMjB,EAiBD,OACE,kBAAMC,SAjBiB,SAAAH,GACvBA,EAAEI,iBACF,IAAMC,EAAU,CAAEd,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,GAC/BW,QAAQC,IAAI,UAAWF,GACvBR,GAASW,EAAAA,EAAAA,IAASH,IACfI,SACAC,MAAK,SAAAC,GACJC,EAAAA,GAAAA,QAAA,UAAiBD,EAAsBN,QAAQd,KAA/C,aACD,IACAsB,OAAM,WACLD,EAAAA,GAAAA,QAAc,2BACf,IACHpB,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAEC,WACE,6BAAO,QAEL,kBACEkB,KAAK,OACLvB,KAAK,OACLW,MAAOX,EACPwB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,YAAY,iBACZC,SAAUpB,QAGd,6BAAO,SAEL,kBACEe,KAAK,QACLvB,KAAK,QACLW,MAAOT,EACPsB,QAAQ,2EACRC,MAAM,oLACNC,UAAQ,EACRC,YAAY,kBACZC,SAAUpB,QAGd,6BAAO,YAEL,kBACEe,KAAK,WACLvB,KAAK,WACLW,MAAOP,EACPoB,QAAQ,2CACRC,MAAM,wJACNC,UAAQ,EACRC,YAAY,qBACZC,SAAUpB,QAGd,mBAAQe,KAAK,SAAb,SAAsB,eAG3B,EClFD,EAJqB,WACnB,OAAO,SAAC,EAAD,GACR,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { register } from 'redux/auth/authThunk';\n\nconst RegisterForm = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChangeInput = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n  const handleSubmitUser = e => {\n    e.preventDefault();\n    const newUser = { name, email, password };\n    console.log('newUser', newUser);\n    dispatch(register(newUser))\n      .unwrap()\n      .then(originalPromiseResult => {\n        toast.success(`${originalPromiseResult.newUser.name} welcome!`);\n      })\n      .catch(() => {\n        toast.failure(\"Sorry, something's wrong\");\n      });\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n  return (\n    <form onSubmit={handleSubmitUser}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Enter name ...\"\n          onChange={handleChangeInput}\n        />\n      </label>\n      <label>\n        Email\n        <input\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          pattern=\"/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.\"\n          title=\"Email may contain letters, numbers, an apostrophe, and must be followed by '@' domain name '.' domain suffix. For example Taras@ukr.ua, adrian@gmail.com, JacobM3rcer@hotmail.com\"\n          required\n          placeholder=\"Enter email ...\"\n          onChange={handleChangeInput}\n        />\n      </label>\n      <label>\n        Password\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          pattern=\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$\"\n          title=\"Password must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters. For example TgeV23592, 3Greioct.\"\n          required\n          placeholder=\"Enter password ...\"\n          onChange={handleChangeInput}\n        />\n      </label>\n      <button type=\"submit\">Register</button>\n    </form>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n  return <RegisterForm />;\n};\n\nexport default RegisterPage;\n"],"names":["useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","handleChangeInput","e","currentTarget","value","onSubmit","preventDefault","newUser","console","log","register","unwrap","then","originalPromiseResult","toast","catch","type","pattern","title","required","placeholder","onChange"],"sourceRoot":""}